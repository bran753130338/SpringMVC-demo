<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--开启注解扫描-->
    <context:component-scan base-package="com.bran"/>
    <!--配置视图解析器对象-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置自定义类型转换器-->
    <bean name="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.bran.utils.StringToDateConverter" />
            </set>
        </property>
    </bean>
    <!--开启SpringMvc框架注解支持-->
    <mvc:annotation-driven conversion-service="conversionService"/>
    <!--前端控制器DispatcherServlet会拦截到所有请求资源，导致静态资源（img、css、js）也会被拦截从而无法使用
        解决问题需要配置静态资源不进行拦截
    -->
    <!--第一种方法，开启后告诉前端控制器哪些静态资源不进行拦截-->
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/js/**" location="/js/" />

    <!--第二种方法，开启之后，访问静态资源请求全部交给Web服务器默认的Servlet处理-->
    <!--<mvc:default-servlet-handler />-->
</beans>